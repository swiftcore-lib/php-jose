<?php
namespace Swiftcore\Jose\Tests\Basic\Utility;

use Swiftcore\Jose\Tests\TestCase;

class CompatibilityTests extends TestCase
{
    public function testGmpImport()
    {
        $number = gmp_import("\0");
        $number = gmp_strval($number);
        $this->assertTrue('0' === $number);

        $number = gmp_import("\0\1\2");
        $number = gmp_strval($number);
        $this->assertTrue('258' === $number);

        $decimal = '341299956234124323269995623412999562341243232699956234124323269995623412'.
                   '43232699956234124323269995632';
        $hex = '3E6A8F3188DAB7B3F4961D12D57CF7BC069AC3F8B40D7560B6BD2B7B8A8295A55EFD3E5CDD963A196C70';
        $number = gmp_import(hex2bin($hex));
        $number = gmp_strval($number, 10);
        $this->assertEquals($decimal, $number);
    }

    public function testGmpExport()
    {
        $number = gmp_init(16705);
        $number = gmp_export($number);
        $this->assertTrue('AA' === $number);

        $binary = '1001010011010101000001011010110010101101101000011000111101010110000011100011110011'.
                  '0101101110011001110001101000010111101110001011011111001011101101010011100100101011'.
                  '0111000011100011101001010101001000100110011111011101001111100001111101100110001010'.
                  '0010101100100110110011000101110001001010001000100011000011110001111110111010001001'.
                  '0010101000101101011001110101100110000111011110010010100110011011101001101010011001'.
                  '1110111110010010111001110001111100100001111100100000100011101000011110110010101000'.
                  '1000011100010101101111110010001111010010010100011100001100111101010111011011101001'.
                  '0001110010110100010111111111111000110101111011101101010001001';
        $decimal = '828903441923084926941001092938488423647101634673203646764810102999999998837473771'.
                   '832461274723467129436721734921919293847716723497364719439192374167283467127864127'.
                   '84672137642139784287914678921';
        $number = gmp_init($decimal);
        $number = gmp_strval($number, 2);
        $this->assertEquals($binary, $number);
    }
}
